// @generated by protoc-gen-es v1.3.1 with parameter "target=js"
// @generated from file bilibili/broadcast/v1/broadcast.proto (package bilibili.broadcast.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { Any, proto3 } from "@bufbuild/protobuf";
import { Status } from "../../rpc/status_pb.js";

/**
 * @generated from enum bilibili.broadcast.v1.Action
 */
export const Action = proto3.makeEnum(
  "bilibili.broadcast.v1.Action",
  [
    {no: 0, name: "UNKNOWN"},
    {no: 1, name: "UPDATE"},
    {no: 2, name: "DELETE"},
  ],
);

/**
 * 鉴权请求，通过authorization验证绑定用户mid
 *
 * @generated from message bilibili.broadcast.v1.AuthReq
 */
export const AuthReq = proto3.makeMessageType(
  "bilibili.broadcast.v1.AuthReq",
  () => [
    { no: 1, name: "guid", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "conn_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_msg_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * 鉴权返回
 *
 * @generated from message bilibili.broadcast.v1.AuthResp
 */
export const AuthResp = proto3.makeMessageType(
  "bilibili.broadcast.v1.AuthResp",
  [],
);

/**
 * target_path:
 *   "/" Service-Name "/" {method name} 参考 gRPC Request Path
 *
 * @generated from message bilibili.broadcast.v1.BroadcastFrame
 */
export const BroadcastFrame = proto3.makeMessageType(
  "bilibili.broadcast.v1.BroadcastFrame",
  () => [
    { no: 1, name: "options", kind: "message", T: FrameOption },
    { no: 2, name: "target_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "body", kind: "message", T: Any },
  ],
);

/**
 * message_id: 
 *   client: 本次连接唯一的消息id，可用于回执
 *   server: 唯一消息id，可用于上报或者回执
 * sequence:
 *   client: 客户端应该每次请求时frame seq++，会返回对应的对称req/resp
 *   server: 服务端下行消息，只会返回默认值：0
 *
 * @generated from message bilibili.broadcast.v1.FrameOption
 */
export const FrameOption = proto3.makeMessageType(
  "bilibili.broadcast.v1.FrameOption",
  () => [
    { no: 1, name: "message_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "sequence", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 3, name: "is_ack", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "status", kind: "message", T: Status },
    { no: 5, name: "ack_origin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "timestamp", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * 心跳请求
 *
 * @generated from message bilibili.broadcast.v1.HeartbeatReq
 */
export const HeartbeatReq = proto3.makeMessageType(
  "bilibili.broadcast.v1.HeartbeatReq",
  [],
);

/**
 * 心跳返回
 *
 * @generated from message bilibili.broadcast.v1.HeartbeatResp
 */
export const HeartbeatResp = proto3.makeMessageType(
  "bilibili.broadcast.v1.HeartbeatResp",
  [],
);

/**
 * 消息回执
 *
 * @generated from message bilibili.broadcast.v1.MessageAckReq
 */
export const MessageAckReq = proto3.makeMessageType(
  "bilibili.broadcast.v1.MessageAckReq",
  () => [
    { no: 1, name: "ack_id", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
    { no: 2, name: "ack_origin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "target_path", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * target_path
 *
 * @generated from message bilibili.broadcast.v1.TargetPath
 */
export const TargetPath = proto3.makeMessageType(
  "bilibili.broadcast.v1.TargetPath",
  () => [
    { no: 1, name: "target_paths", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

